{"version":3,"sources":["QuoteContainer.js","App.js","index.js"],"names":["QuoteContainer","quotesDataRef","useRef","useState","chooseAQuote","current","quote","updateQuote","quotes","text","author","Math","floor","random","length","useEffect","a","fetch","response","json","data","quotesRequest","then","console","error","QuoteCont","styled","div","Quote","h3","Author","h4","Buttons","NewQuoteBut","button","className","target","rel","href","size","title","onClick","App","MainContainer","ReactDOM","render","document","querySelector"],"mappings":"8nCAIe,SAASA,IACpB,IAAMC,EAAgBC,iBAAO,IADQ,EAERC,mBAASC,EAAaH,EAAcI,UAF5B,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAkBrC,SAASH,EAAaI,GAClB,GAAc,KAAXA,EAAe,MAAO,CAACC,KAAM,GAAIC,OAAQ,IADlB,MAEHF,EAAOG,KAAKC,MAAMD,KAAKE,SAAWL,EAAOM,SAChE,MAAO,CACHL,KAJsB,EAEnBA,KAGHC,OALsB,EAEbA,QAhBlBK,qBAAU,WAAM,4CACX,8BAAAC,EAAA,sEAC2BC,MAAM,+BADjC,cACUC,EADV,gBAEuBA,EAASC,OAFhC,cAEUC,EAFV,yBAGWA,GAHX,4CADW,uBAAC,WAAD,gCAOXC,GAAgBC,MAAK,SAACF,GAClBnB,EAAcI,QAAUe,EACxBb,EAAYH,EAAagB,MAC1BG,QAAQC,SAEZ,IAWH,IAAMC,EAAYC,IAAOC,IAAV,KAKTC,EAAQF,IAAOG,GAAV,KAMLC,EAASJ,IAAOK,GAAV,KAMNC,EAAUN,IAAOC,IAAV,KAKPM,EAAcP,IAAOQ,OAAV,KAQjB,OACI,kBAACT,EAAD,KACI,kBAACG,EAAD,CAAOO,UAAU,SAAjB,IAA2B7B,EAAMG,KAAjC,KACA,kBAACqB,EAAD,CAAQK,UAAU,UAAlB,IAA6B7B,EAAMI,QAAU,WAC7C,kBAACsB,EAAD,KACI,uBAAGI,OAAO,SAASC,IAAI,sBAAsBC,KAAI,gDAA2ChC,EAAMG,KAAjD,qBAAkEH,EAAMI,QAAUyB,UAAU,wBAAuB,kBAAC,IAAD,CAASI,KAAK,KAAKC,MAAM,iCAC7L,kBAACP,EAAD,CAAaQ,QAAS,kBAAMlC,EAAYH,EAAaH,EAAcI,YAAnE,e,kMC/CDqC,MAff,WACE,IAAMC,EAAgBjB,IAAOC,IAAV,KAOnB,OACE,kBAACgB,EAAD,KACE,kBAAC3C,EAAD,QCXN4C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.71d3cd6b.chunk.js","sourcesContent":["import React, {useState, useEffect,  useRef } from 'react';\r\nimport {Twitter} from '@styled-icons/boxicons-logos';\r\nimport styled from 'styled-components';\r\n\r\nexport default function QuoteContainer() {\r\n    const quotesDataRef = useRef(\"\");\r\n    const [quote, updateQuote] = useState(chooseAQuote(quotesDataRef.current)); \r\n\r\n   useEffect(() => {\r\n        async function quotesRequest () {\r\n            const response = await fetch(\"https://type.fit/api/quotes\");\r\n            const data = await response.json();\r\n            return data;\r\n        }\r\n        \r\n        quotesRequest().then((data) => {\r\n            quotesDataRef.current = data;\r\n            updateQuote(chooseAQuote(data));\r\n        }, console.error);\r\n\r\n    }, []);\r\n\r\n    function chooseAQuote(quotes) {\r\n        if(quotes === \"\") return {text: \"\", author: \"\"};\r\n        const {text, author} = quotes[Math.floor(Math.random() * quotes.length)];\r\n        return {\r\n            text,\r\n            author\r\n        }\r\n    }\r\n\r\n    const QuoteCont = styled.div`\r\n    display:grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 30px;\r\n    `\r\n    const Quote = styled.h3`\r\n    text-align: center;\r\n    width: 90%;\r\n    font-size: 2em;\r\n    font-family: 'Acme', sans-serif;\r\n    `\r\n    const Author = styled.h4`\r\n       text-align: right;\r\n       width: 90%;\r\n       font-size: 1.5em;\r\n       font-family: 'Dancing Script', cursive; \r\n    `\r\n    const Buttons = styled.div`\r\n       display: flex;\r\n       justify-content: space-around;\r\n    `\r\n\r\n    const NewQuoteBut = styled.button`\r\n        padding: 10px;\r\n        background-color: #31112C;\r\n        color: #ddd;\r\n        border: 0;\r\n        cursor: pointer;\r\n    `\r\n\r\n    return (\r\n        <QuoteCont>\r\n            <Quote className=\"quote\">\"{quote.text}\"</Quote>\r\n            <Author className=\"author\">-{quote.author || \"Unknown\" }</Author>\r\n            <Buttons>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://twitter.com/intent/tweet?text=${quote.text}&hashtags=${quote.author}`} className=\"twitter-share-button\"><Twitter size=\"25\" title=\"Share this quote on twitter\" /></a>\r\n                <NewQuoteBut onClick={() => updateQuote(chooseAQuote(quotesDataRef.current))}>New Quote</NewQuoteBut>\r\n            </Buttons>      \r\n        </QuoteCont>\r\n    )\r\n}","import React from 'react';\nimport QuoteContainer from './QuoteContainer';\nimport './App.css';\nimport styled from 'styled-components';\n\nfunction App() {\n  const MainContainer = styled.div`\n  background-color: #f8bd7f;\n  min-height: 150px;\n  min-width: 150px;\n  padding: 20px;\n  border-radius: 10px;\n  `\n  return (\n    <MainContainer>\n      <QuoteContainer />   \n    </MainContainer>\n  )\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}